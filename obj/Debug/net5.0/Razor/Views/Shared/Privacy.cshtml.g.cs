#pragma checksum "D:\Projects\Mvc_LoginApp\Views\Shared\Privacy.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "934d7caa99cd9c359548127a1bc6a721bc4fdcdf"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Shared_Privacy), @"mvc.1.0.view", @"/Views/Shared/Privacy.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "D:\Projects\Mvc_LoginApp\Views\_ViewImports.cshtml"
using Mvc_Apteka;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "D:\Projects\Mvc_LoginApp\Views\_ViewImports.cshtml"
using Mvc_Apteka.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"934d7caa99cd9c359548127a1bc6a721bc4fdcdf", @"/Views/Shared/Privacy.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"b65ed4c61a0589435cd60768a6bc663fc1d06125", @"/Views/_ViewImports.cshtml")]
    #nullable restore
    public class Views_Shared_Privacy : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    #nullable disable
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#nullable restore
#line 1 "D:\Projects\Mvc_LoginApp\Views\Shared\Privacy.cshtml"
  
    ViewData["Title"] = "Тестовое задание";

#line default
#line hidden
#nullable disable
            WriteLiteral("<h1>");
#nullable restore
#line 4 "D:\Projects\Mvc_LoginApp\Views\Shared\Privacy.cshtml"
Write(ViewData["Title"]);

#line default
#line hidden
#nullable disable
            WriteLiteral(@"</h1>


<ul class=""list-group"">
    <li class=""list-group-item"">
        <details>
            <summary>
                <span style=""font-size: 22px;"">Создание БД для аптеки в MS SQL</span>
            </summary>
            <div style=""text-align: justify;"">
                На входе используются XML файлы с определенной структурой (см. приложение 1). 
                По этим данным реализовать БД для хранения информации.
            </div>
        </details>
    </li>
    <li class=""list-group-item"">
        <details>
            <summary>
                <span style=""font-size: 22px;"">Интерфейс пользователя</span>
            </summary>
            <div style=""text-align: justify;"">
                <div>- В таблице показать информацию о препаратах на складе с актуальной ценой и кол-вом.</div>
                <div>- Просмотр изменения данных по цене и кол-ву выбранного препарата.</div>
                <div>- Добавить возможность ручного изменения данных о препарате, как цены, так и ко");
            WriteLiteral(@"л-ва.</div>
            </div>
        </details>
    </li>
    <li class=""list-group-item"">
        <details>
            <summary>
                <span style=""font-size: 22px;"">Импорт/Экcпорт</span>
            </summary>
                 
            <div style=""text-align: justify;"">
                -Выгрузка (прайс-лист=(препарат, цена и остаток)), т.е. 
                на текущий момент в файл вида JSON.</div>            
        </details>
    </li>
    <li class=""list-group-item"">
        <details>
            <summary>
                <span style=""font-size: 22px;"">Дополнительно</span>
            </summary>
            <div style=""text-align: justify;""> 
                <div>- Сделать возможность для импорта файла данных XML.</div> 
                <div>- Модифицировать вид для просмотра истории изменений добавив туда информацию каким образом было оно внесено (автоматически или ручным).</div>
                <div>- Сделать возможность экспорта прайс-листа с выбором формата XM");
            WriteLiteral("L или JSON</div>\r\n            </div>\r\n        </details>\r\n    </li>\r\n</ul>");
        }
        #pragma warning restore 1998
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; } = default!;
        #nullable disable
    }
}
#pragma warning restore 1591
